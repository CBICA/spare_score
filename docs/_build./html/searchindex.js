Search.setIndex({"alltitles": {"Indices and tables": [[0, "indices-and-tables"]], "Module contents": [[2, "module-contents"]], "Submodules": [[2, "submodules"]], "Welcome to spare-scores\u2019s documentation!": [[0, "welcome-to-spare-scores-s-documentation"]], "spare_scores": [[1, "spare-scores"]], "spare_scores package": [[2, "spare-scores-package"]], "spare_scores.classes module": [[2, "spare-scores-classes-module"]], "spare_scores.cli module": [[2, "spare-scores-cli-module"]], "spare_scores.data_prep module": [[2, "module-spare_scores.data_prep"]], "spare_scores.mlp module": [[2, "module-spare_scores.mlp"]], "spare_scores.mlp_torch module": [[2, "module-spare_scores.mlp_torch"]], "spare_scores.spare_scores module": [[2, "module-spare_scores.spare_scores"]], "spare_scores.svm module": [[2, "module-spare_scores.svm"]], "spare_scores.util module": [[2, "module-spare_scores.util"]]}, "docnames": ["index", "modules", "spare_scores"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "modules.rst", "spare_scores.rst"], "indexentries": {"add_file_extension() (in module spare_scores.util)": [[2, "spare_scores.util.add_file_extension", false]], "age_sex_match() (in module spare_scores.data_prep)": [[2, "spare_scores.data_prep.age_sex_match", false]], "check_file_exists() (in module spare_scores.util)": [[2, "spare_scores.util.check_file_exists", false]], "check_test() (in module spare_scores.data_prep)": [[2, "spare_scores.data_prep.check_test", false]], "check_train() (in module spare_scores.data_prep)": [[2, "spare_scores.data_prep.check_train", false]], "convert_cat_variables() (in module spare_scores.data_prep)": [[2, "spare_scores.data_prep.convert_cat_variables", false]], "convert_to_number_if_possible() (in module spare_scores.util)": [[2, "spare_scores.util.convert_to_number_if_possible", false]], "correct_reg_bias() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.correct_reg_bias", false]], "expspace() (in module spare_scores.util)": [[2, "spare_scores.util.expspace", false]], "find_best_threshold() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.find_best_threshold", false]], "fit() (spare_scores.mlp.mlpmodel method)": [[2, "spare_scores.mlp.MLPModel.fit", false]], "fit() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.fit", false]], "fit() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.fit", false]], "forward() (spare_scores.mlp_torch.simplemlp method)": [[2, "spare_scores.mlp_torch.SimpleMLP.forward", false]], "get_all_stats() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.get_all_stats", false]], "get_stats() (spare_scores.mlp.mlpmodel method)": [[2, "spare_scores.mlp.MLPModel.get_stats", false]], "get_stats() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.get_stats", false]], "is_unique_identifier() (in module spare_scores.util)": [[2, "spare_scores.util.is_unique_identifier", false]], "load_df() (in module spare_scores.util)": [[2, "spare_scores.util.load_df", false]], "load_examples() (in module spare_scores.util)": [[2, "spare_scores.util.load_examples", false]], "load_model() (in module spare_scores.util)": [[2, "spare_scores.util.load_model", false]], "logging_basic_config() (in module spare_scores.data_prep)": [[2, "spare_scores.data_prep.logging_basic_config", false]], "mlpdataset (class in spare_scores.mlp_torch)": [[2, "spare_scores.mlp_torch.MLPDataset", false]], "mlpmodel (class in spare_scores.mlp)": [[2, "spare_scores.mlp.MLPModel", false]], "mlptorchmodel (class in spare_scores.mlp_torch)": [[2, "spare_scores.mlp_torch.MLPTorchModel", false]], "module": [[2, "module-spare_scores.data_prep", false], [2, "module-spare_scores.mlp", false], [2, "module-spare_scores.mlp_torch", false], [2, "module-spare_scores.spare_scores", false], [2, "module-spare_scores.svm", false], [2, "module-spare_scores.util", false]], "object() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.object", false]], "output_stats() (spare_scores.mlp.mlpmodel method)": [[2, "spare_scores.mlp.MLPModel.output_stats", false]], "output_stats() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.output_stats", false]], "output_stats() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.output_stats", false]], "param_search() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.param_search", false]], "predict() (spare_scores.mlp.mlpmodel method)": [[2, "spare_scores.mlp.MLPModel.predict", false]], "predict() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.predict", false]], "predict() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.predict", false]], "prepare_sample() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.prepare_sample", false]], "run_cv() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.run_CV", false]], "save_file() (in module spare_scores.util)": [[2, "spare_scores.util.save_file", false]], "set_parameters() (spare_scores.mlp.mlpmodel method)": [[2, "spare_scores.mlp.MLPModel.set_parameters", false]], "set_parameters() (spare_scores.mlp_torch.mlptorchmodel method)": [[2, "spare_scores.mlp_torch.MLPTorchModel.set_parameters", false]], "set_parameters() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.set_parameters", false]], "simplemlp (class in spare_scores.mlp_torch)": [[2, "spare_scores.mlp_torch.SimpleMLP", false]], "smart_unique() (in module spare_scores.data_prep)": [[2, "spare_scores.data_prep.smart_unique", false]], "spare_scores.data_prep": [[2, "module-spare_scores.data_prep", false]], "spare_scores.mlp": [[2, "module-spare_scores.mlp", false]], "spare_scores.mlp_torch": [[2, "module-spare_scores.mlp_torch", false]], "spare_scores.spare_scores": [[2, "module-spare_scores.spare_scores", false]], "spare_scores.svm": [[2, "module-spare_scores.svm", false]], "spare_scores.util": [[2, "module-spare_scores.util", false]], "spare_test() (in module spare_scores.spare_scores)": [[2, "spare_scores.spare_scores.spare_test", false]], "spare_train() (in module spare_scores.spare_scores)": [[2, "spare_scores.spare_scores.spare_train", false]], "svmmodel (class in spare_scores.svm)": [[2, "spare_scores.svm.SVMModel", false]], "train_initialize() (spare_scores.svm.svmmodel method)": [[2, "spare_scores.svm.SVMModel.train_initialize", false]]}, "objects": {"spare_scores": [[2, 0, 0, "-", "data_prep"], [2, 0, 0, "-", "mlp"], [2, 0, 0, "-", "mlp_torch"], [2, 0, 0, "-", "spare_scores"], [2, 0, 0, "-", "svm"], [2, 0, 0, "-", "util"]], "spare_scores.data_prep": [[2, 1, 1, "", "age_sex_match"], [2, 1, 1, "", "check_test"], [2, 1, 1, "", "check_train"], [2, 1, 1, "", "convert_cat_variables"], [2, 1, 1, "", "logging_basic_config"], [2, 1, 1, "", "smart_unique"]], "spare_scores.mlp": [[2, 2, 1, "", "MLPModel"]], "spare_scores.mlp.MLPModel": [[2, 3, 1, "", "fit"], [2, 3, 1, "", "get_stats"], [2, 3, 1, "", "output_stats"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "set_parameters"]], "spare_scores.mlp_torch": [[2, 2, 1, "", "MLPDataset"], [2, 2, 1, "", "MLPTorchModel"], [2, 2, 1, "", "SimpleMLP"]], "spare_scores.mlp_torch.MLPTorchModel": [[2, 3, 1, "", "find_best_threshold"], [2, 3, 1, "", "fit"], [2, 3, 1, "", "get_all_stats"], [2, 3, 1, "", "object"], [2, 3, 1, "", "output_stats"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "set_parameters"]], "spare_scores.mlp_torch.SimpleMLP": [[2, 3, 1, "", "forward"]], "spare_scores.spare_scores": [[2, 1, 1, "", "spare_test"], [2, 1, 1, "", "spare_train"]], "spare_scores.svm": [[2, 2, 1, "", "SVMModel"]], "spare_scores.svm.SVMModel": [[2, 3, 1, "", "correct_reg_bias"], [2, 3, 1, "", "fit"], [2, 3, 1, "", "get_stats"], [2, 3, 1, "", "output_stats"], [2, 3, 1, "", "param_search"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "prepare_sample"], [2, 3, 1, "", "run_CV"], [2, 3, 1, "", "set_parameters"], [2, 3, 1, "", "train_initialize"]], "spare_scores.util": [[2, 1, 1, "", "add_file_extension"], [2, 1, 1, "", "check_file_exists"], [2, 1, 1, "", "convert_to_number_if_possible"], [2, 1, 1, "", "expspace"], [2, 1, 1, "", "is_unique_identifier"], [2, 1, 1, "", "load_df"], [2, 1, 1, "", "load_examples"], [2, 1, 1, "", "load_model"], [2, 1, 1, "", "save_file"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": 2, "0": 2, "1": 2, "147": 2, "15": 2, "2": 2, "20": 2, "256": 2, "3": 2, "8": 2, "A": 2, "For": 2, "If": 2, "The": 2, "These": 2, "Will": 2, "accuraci": 2, "action": 2, "ad": 2, "add_file_extens": [1, 2], "addition": 2, "afterward": 2, "ag": 2, "age_out_percentag": 2, "age_sex_match": [1, 2], "all": 2, "also": 2, "although": 2, "ani": 2, "appli": 2, "apply_model": 2, "ar": 2, "arg": 2, "argument": 2, "assign": 2, "attribut": 2, "balanc": 2, "base": 2, "basic": 2, "batchnorm1d": 2, "binari": 2, "bn": 2, "bool": 2, "calcul": 2, "call": 2, "can": 2, "care": 2, "chang": 2, "check": 2, "check_file_exist": [1, 2], "check_test": [1, 2], "check_train": [1, 2], "class": 1, "classif": 2, "classifi": 2, "cli": 1, "cn": 2, "column": 2, "column_nam": 2, "comput": 2, "configur": 2, "consid": 2, "contain": 2, "content": 1, "content_onli": 2, "continu": 2, "convert": 2, "convert_cat_vari": [1, 2], "convert_to_number_if_poss": [1, 2], "correct_reg_bia": [1, 2], "creat": 2, "csv": 2, "current": 2, "data": 2, "data_prep": 1, "data_var": 2, "datafram": 2, "dataset": 2, "default": 2, "defin": 2, "deprec": 2, "df": 2, "df1": 2, "df2": 2, "dict": 2, "dictionari": 2, "dimens": 2, "doe": 2, "dropout": 2, "dure": 2, "either": 2, "empti": 2, "error": 2, "everi": 2, "exampl": 2, "except": 2, "exclud": 2, "expect": 2, "expspac": [1, 2], "extens": 2, "extrem": 2, "f1": 2, "fals": 2, "featur": 2, "fifth": 2, "file": 2, "file_nam": 2, "filenam": 2, "filter": 2, "find_best_threshold": [1, 2], "first": 2, "fit": [1, 2], "float": 2, "fold": 2, "former": 2, "forward": [1, 2], "from": 2, "function": 2, "get_all_stat": [1, 2], "get_stat": [1, 2], "given": 2, "ground": 2, "group": 2, "gz": 2, "help": 2, "hidden": 2, "hidden_s": 2, "higher": 2, "hook": 2, "i": 2, "id": 2, "ignor": 2, "ignore_var": 2, "index": 0, "inform": 2, "initi": 2, "input": 2, "instanc": 2, "instancenorm1d": 2, "instead": 2, "int": 2, "is_unique_identifi": [1, 2], "its": 2, "kei": 2, "kernel": 2, "key_var": 2, "keyword": 2, "kwarg": 2, "larger": 2, "later": 2, "latter": 2, "layer": 2, "level": 2, "linear": 2, "list": 2, "listkey_var": 2, "load": 2, "load_df": [1, 2], "load_exampl": [1, 2], "load_model": [1, 2], "log": 2, "logger": 2, "logging_basic_config": [1, 2], "manag": 2, "match": 2, "mdl_i": 2, "mdl_path": 2, "messag": 2, "meta_data": 2, "metadata": 2, "method": 2, "minimum": 2, "mlp": 1, "mlp_torch": 1, "mlpdataset": [1, 2], "mlpmodel": [1, 2], "mlptorchmodel": [1, 2], "model": 2, "model_typ": 2, "modul": [0, 1], "more": 2, "must": 2, "name": 2, "need": 2, "none": 2, "normal": 2, "notic": 2, "num_featur": 2, "number": 2, "numer": 2, "numpi": 2, "object": [1, 2], "ok": 2, "older": 2, "one": 2, "ones": 2, "onli": 2, "optim": 2, "option": 2, "origin": 2, "otherwis": 2, "out": 2, "output": 2, "output_stat": [1, 2], "overridden": 2, "p": 2, "p_threshold": 2, "packag": 1, "page": 0, "pair": 2, "panda": 2, "param": 2, "param_search": [1, 2], "paramet": 2, "particip": 2, "pass": 2, "path": 2, "per": 2, "percentag": 2, "perform": 2, "pkl": 2, "point": 2, "pos_group": 2, "posit": 2, "possibl": 2, "precis": 2, "predict": [1, 2], "predictor": 2, "prepare_sampl": [1, 2], "present": 2, "preserv": 2, "primari": 2, "print": 2, "provid": 2, "quintil": 2, "random": 2, "randomli": 2, "rbf": 2, "recal": 2, "recip": 2, "regard": 2, "regist": 2, "regress": 2, "result": 2, "retain": 2, "return": 2, "rtype": 2, "run": 2, "run_cv": [1, 2], "same": 2, "sampl": 2, "save": 2, "save_fil": [1, 2], "scaler": 2, "score": 2, "search": 0, "second": 2, "select": 2, "sensit": 2, "set": 2, "set_paramet": [1, 2], "sex": 2, "should": 2, "significantli": 2, "silent": 2, "simpl": 2, "simplemlp": [1, 2], "sinc": 2, "smart_uniqu": [1, 2], "sourc": 2, "span": 2, "spare": 2, "spare_test": [1, 2], "spare_train": [1, 2], "spare_var": 2, "specif": 2, "static": 2, "statu": 2, "status_cod": 2, "str": 2, "string": 2, "subclass": 2, "submodul": 1, "success": 2, "support": 2, "svm": 1, "svmmodel": [1, 2], "take": 2, "target": 2, "test": 2, "them": 2, "thi": 2, "three": 2, "time": 2, "to_match": 2, "to_predict": 2, "total": 2, "train": 2, "train_initi": [1, 2], "train_model": 2, "trial": 2, "trim": 2, "true": 2, "truth": 2, "tupl": 2, "two": 2, "type": 2, "uniqu": 2, "unsuccess": 2, "updat": 2, "us": 2, "use_bn": 2, "util": 1, "valu": 2, "variabl": 2, "verbos": 2, "wai": 2, "warn": 2, "where": 2, "whether": 2, "while": 2, "within": 2, "x": 2, "x_train": 2, "y": 2, "y_hat": 2, "y_score": 2, "y_test": 2, "y_train": 2}, "titles": ["Welcome to spare-scores\u2019s documentation!", "spare_scores", "spare_scores package"], "titleterms": {"": 0, "class": 2, "cli": 2, "content": 2, "data_prep": 2, "document": 0, "indic": 0, "mlp": 2, "mlp_torch": 2, "modul": 2, "packag": 2, "score": 0, "spare": 0, "spare_scor": [1, 2], "submodul": 2, "svm": 2, "tabl": 0, "util": 2, "welcom": 0}})